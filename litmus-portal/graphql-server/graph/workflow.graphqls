enum WorkflowRunStatus {
  All
  Failed
  Running
  Succeeded
}

input DateRange {
  start_date: String!
  end_date: String
}

input WorkflowRunFilterInput {
  workflow_name: String
  cluster_name: String
  workflow_status: WorkflowRunStatus
  date_range: DateRange
}

input Pagination {
  page: Int!
  limit: Int!
}

enum WorkflowSortingField {
  Name
  Time
}

input WorkflowRunSortInput {
  field: WorkflowSortingField!
  descending: Boolean
}

input GetWorkflowRunsInput {
  project_id: ID!
  workflow_run_ids: [ID]
  workflow_ids: [ID]
  pagination: Pagination
  sort: WorkflowRunSortInput
  filter: WorkflowRunFilterInput
}

type weightages {
  experiment_name: String!
  weightage: Int!
}

type WorkflowRun {
  workflow_run_id: ID!
  workflow_id: ID!
  cluster_name: String!
  weightages: [weightages!]!
  last_updated: String!
  project_id: ID!
  cluster_id: ID!
  workflow_name: String!
  cluster_type: String
  phase: String!
  resiliency_score: Float
  experiments_passed: Int
  experiments_failed: Int
  experiments_awaited: Int
  experiments_stopped: Int
  experiments_na: Int
  total_experiments: Int
  execution_data: String!
  isRemoved: Boolean
}

type GetWorkflowsOutput {
  total_no_of_workflow_runs: Int!
  workflow_runs: [WorkflowRun]!
}

input WorkflowFilterInput {
  workflow_name: String
  cluster_name: String
}

input ListWorkflowsInput {
  project_id: ID!
  workflow_ids: [ID]
  pagination: Pagination
  sort: WorkflowSortInput
  filter: WorkflowFilterInput
}

input WorkflowSortInput {
  field: WorkflowSortingField!
  descending: Boolean
}

type Workflow {
  workflow_id: String!
  workflow_manifest: String!
  cronSyntax: String!
  cluster_name: String!
  workflow_name: String!
  workflow_description: String!
  weightages: [weightages!]!
  isCustomWorkflow: Boolean!
  updated_at: String!
  created_at: String!
  project_id: ID!
  cluster_id: ID!
  cluster_type: String!
  isRemoved: Boolean!
}

type ListWorkflowsOutput {
  total_no_of_workflows: Int!
  workflows: [Workflow]!
}
