apiVersion: v1
kind: ConfigMap
metadata:
  name: litmus-portal-admin-config
data:
  AgentScope: namespace
  AgentNamespace: ${LITMUS_PORTAL_NAMESPACE}
  DataBaseServer: "mongodb://mongo-service:27017"
  JWTSecret: "litmus-portal@123"
  DB_USER: "admin"
  DB_PASSWORD: "1234"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litmusportal-frontend
  labels:
    component: litmusportal-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      component: litmusportal-frontend
  template:
    metadata:
      labels:
        component: litmusportal-frontend
    spec:
      containers:
        - name: litmusportal-frontend
          image: litmuschaos/litmusportal-frontend:ci
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: AGENT_SCOPE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentScope
---
apiVersion: v1
kind: Service
metadata:
  name: litmusportal-frontend-service
spec:
  type: NodePort
  ports:
    - name: http
      port: 9091
      targetPort: 8080
  selector:
    component: litmusportal-frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: litmus-server-account
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: litmus-server
  labels:
    name: litmus-server
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: litmus-server-rb
subjects:
  - kind: ServiceAccount
    name: litmus-server-account
    namespace: ${LITMUS_PORTAL_NAMESPACE}
roleRef:
  kind: Role
  name: litmus-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litmusportal-server
  labels:
    component: litmusportal-server
spec:
  replicas: 1
  selector:
    matchLabels:
      component: litmusportal-server
  template:
    metadata:
      labels:
        component: litmusportal-server
    spec:
      containers:
        - name: graphql-server
          image: litmuschaos/litmusportal-server:ci
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
          env:
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DataBaseServer
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: JWTSecret
            - name: LITMUS_PORTAL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SELF_CLUSTER
              value: "true"
            - name: AGENT_SCOPE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentScope
            - name: AGENT_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentNamespace
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_PASSWORD
            - name: PORTAL_SCOPE
              value: "namespace"
            - name: PORTAL_ENDPOINT
              value: "http://litmusportal-server-service:9002"
            - name: SUBSCRIBER_IMAGE
              value: "litmuschaos/litmusportal-subscriber:ci"
            - name: EVENT_TRACKER_IMAGE
              value: "litmuschaos/litmusportal-event-tracker:ci"
            - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
              value: "litmuschaos/workflow-controller:v2.11.0"
            - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
              value: "litmuschaos/argoexec:v2.11.0"
            - name: LITMUS_CHAOS_OPERATOR_IMAGE
              value: "litmuschaos/chaos-operator:1.13.6"
            - name: LITMUS_CHAOS_RUNNER_IMAGE
              value: "litmuschaos/chaos-runner:1.13.6"
            - name: LITMUS_CHAOS_EXPORTER_IMAGE
              value: "litmuschaos/chaos-exporter:1.13.6"
            - name: CONTAINER_RUNTIME_EXECUTOR
              value: "k8sapi"
            - name: HUB_BRANCH_NAME
              value: "v1.13.x"
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
        - name: auth-server
          image: litmuschaos/litmusportal-auth-server:ci
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
          env:
            - name: STRICT_PASSWORD_POLICY
              value: "false"
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DataBaseServer
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: JWTSecret
            - name: ADMIN_USERNAME
              value: "admin"
            - name: ADMIN_PASSWORD
              value: "litmus"
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_PASSWORD
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
      serviceAccountName: litmus-server-account
---
apiVersion: v1
kind: Service
metadata:
  name: litmusportal-server-service
spec:
  type: NodePort
  ports:
    - name: graphql-server
      port: 9002
      targetPort: 8080
    - name: auth-server
      port: 9003
      targetPort: 3000
  selector:
    component: litmusportal-server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      component: database
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        component: database
    spec:
      containers:
        - name: mongo
          image: litmuschaos/mongo:4.2.8
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
          ports:
            - containerPort: 27017
          imagePullPolicy: Always
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_USER
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DB_PASSWORD
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-service
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    component: database
